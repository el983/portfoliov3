{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\portfoliov3\\\\src\\\\components\\\\ScrollingCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./ScrollingCards.css\";\nimport client5 from \"../assets/client5.jpeg\";\nimport client6 from \"../assets/client6.jpeg\";\nimport client7 from \"../assets/client7.jpeg\";\nimport client8 from \"../assets/client8.jpeg\";\n// Card data instead of just image URLs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [{\n  image123: client5,\n  content: \"Strategic Leader\",\n  backgroundColor: \"rgb(0, 104, 139)\"\n}, {\n  image123: client6,\n  content: \"Learning & Development\",\n  backgroundColor: \"rgb(205, 55, 0)\"\n}, {\n  image123: client7,\n  content: \"Motivational Speaker\",\n  backgroundColor: \"rgb(3, 168, 158)\"\n}, {\n  image123: client8,\n  content: \"Instructional Design\",\n  backgroundColor: \"rgb(255, 97, 3)\"\n}];\nexport default function ZoomCards() {\n  _s();\n  const sectionRef = useRef(null);\n  const [scrollPos, setScrollPos] = useState(0);\n  const [vh, setVh] = useState(window.innerHeight);\n  const totalHeight = cards.length * vh;\n  const sectionHeightVh = cards.length + 1;\n  useEffect(() => {\n    const update = () => {\n      setVh(window.innerHeight);\n      if (!sectionRef.current) return;\n      const sectionTop = sectionRef.current.getBoundingClientRect().top + window.scrollY;\n      const raw = window.scrollY - sectionTop;\n      setScrollPos(Math.min(Math.max(raw, 0), totalHeight));\n    };\n    window.addEventListener(\"scroll\", update, {\n      passive: true\n    });\n    window.addEventListener(\"resize\", update);\n    update();\n    return () => {\n      window.removeEventListener(\"scroll\", update);\n      window.removeEventListener(\"resize\", update);\n    };\n  }, [totalHeight]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    ref: sectionRef,\n    className: \"cards-section\",\n    style: {\n      height: `${sectionHeightVh * 100}vh`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-sticky\",\n      children: cards.map((card, i) => {\n        const prog = Math.min(Math.max(scrollPos / vh - i, 0), 1);\n        const scale = prog;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            backgroundColor: card.backgroundColor,\n            transform: `scale(${scale})`,\n            transformOrigin: \"center center\",\n            zIndex: i\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.image123,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-cont\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: card.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(ZoomCards, \"dz2IT9y7l7IFPmWY5Aa/Cq3FvNo=\");\n_c = ZoomCards;\nvar _c;\n$RefreshReg$(_c, \"ZoomCards\");","map":{"version":3,"names":["React","useRef","useState","useEffect","client5","client6","client7","client8","jsxDEV","_jsxDEV","cards","image123","content","backgroundColor","ZoomCards","_s","sectionRef","scrollPos","setScrollPos","vh","setVh","window","innerHeight","totalHeight","length","sectionHeightVh","update","current","sectionTop","getBoundingClientRect","top","scrollY","raw","Math","min","max","addEventListener","passive","removeEventListener","ref","className","style","height","children","map","card","i","prog","scale","transform","transformOrigin","zIndex","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/portfoliov3/src/components/ScrollingCards.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ScrollingCards.css\";\r\nimport client5 from \"../assets/client5.jpeg\";\r\nimport client6 from \"../assets/client6.jpeg\";\r\nimport client7 from \"../assets/client7.jpeg\";\r\nimport client8 from \"../assets/client8.jpeg\";\r\n// Card data instead of just image URLs\r\nconst cards = [\r\n  {\r\n      image123: client5,\r\n      content: \"Strategic Leader\",\r\n      backgroundColor: \"rgb(0, 104, 139)\",\r\n  },\r\n  {\r\n      image123: client6,\r\n      content: \"Learning & Development\",\r\n      backgroundColor: \"rgb(205, 55, 0)\",\r\n  },\r\n  {\r\n      image123: client7,\r\n      content: \"Motivational Speaker\",\r\n      backgroundColor: \"rgb(3, 168, 158)\",\r\n  },\r\n  {\r\n      image123: client8,\r\n      content: \"Instructional Design\",\r\n      backgroundColor: \"rgb(255, 97, 3)\",\r\n  },\r\n];\r\n\r\nexport default function ZoomCards() {\r\n    const sectionRef = useRef(null);\r\n    const [scrollPos, setScrollPos] = useState(0);\r\n    const [vh, setVh] = useState(window.innerHeight);\r\n\r\n    const totalHeight = cards.length * vh;\r\n    const sectionHeightVh = cards.length + 1;\r\n\r\n    useEffect(() => {\r\n        const update = () => {\r\n            setVh(window.innerHeight);\r\n            if (!sectionRef.current) return;\r\n            const sectionTop =\r\n                sectionRef.current.getBoundingClientRect().top + window.scrollY;\r\n            const raw = window.scrollY - sectionTop;\r\n            setScrollPos(Math.min(Math.max(raw, 0), totalHeight));\r\n        };\r\n\r\n        window.addEventListener(\"scroll\", update, { passive: true });\r\n        window.addEventListener(\"resize\", update);\r\n        update();\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", update);\r\n            window.removeEventListener(\"resize\", update);\r\n        };\r\n    }, [totalHeight]);\r\n\r\n    return (\r\n        <section\r\n            ref={sectionRef}\r\n            className=\"cards-section\"\r\n            style={{ height: `${sectionHeightVh * 100}vh` }}\r\n        >\r\n            <div className=\"cards-sticky\">\r\n                {cards.map((card, i) => {\r\n                    const prog = Math.min(Math.max(scrollPos / vh - i, 0), 1);\r\n                    const scale = prog;\r\n                    return (\r\n                        <div\r\n                            key={i}\r\n                            className=\"card\"\r\n                            style={{\r\n                                backgroundColor: card.backgroundColor,\r\n                                transform: `scale(${scale})`,\r\n                                transformOrigin: \"center center\",\r\n                                zIndex: i,\r\n                            }}\r\n                        >\r\n                            <div className=\"card-content\">\r\n                                <div className=\"card-img\">\r\n                                    <img src={card.image123} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"card-cont\">\r\n                                    <p>{card.content}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </section>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}